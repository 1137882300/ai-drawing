---
import Layout from '../layouts/Layout.astro';

// 格式化日期
function formatDate(date: Date): string {
    return date.toLocaleString('zh-CN', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
    }).replace(/\//g, '.');
}

// 获取初始页面数据
const initialResponse = await fetch(`${Astro.url.origin}/api/album-images?page=1`);
const { images: initialImages, hasMore: initialHasMore } = await initialResponse.json();

// 获取页码（如果有的话）
const currentPage = Number(Astro.url.searchParams.get('page') || 1);

// 在文件顶部添加类型定义
interface ImageItem {
    url: string;
    key: string;
    lastModified: string | Date;
}
---

<Layout title="Album - Daily Poetry Images">
    <main class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">相册</h1>
        
        <div 
            id="image-grid" 
            class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 
                   gap-4 
                   auto-rows-min"
        >
            {initialImages.map((image: ImageItem) => (
                <div class="masonry-item relative group cursor-pointer" data-url={image.url}>
                    <div class="relative overflow-hidden rounded-xl shadow-lg transition-all 
                                duration-300 hover:shadow-xl">
                        <img 
                            src={image.url}
                            alt={`Image from ${image.key}`}
                            class="w-full h-auto object-cover rounded-xl 
                                   transform transition-transform duration-300 
                                   group-hover:scale-105"
                            loading="lazy"
                        />
                        <div class="absolute bottom-0 left-0 right-0 
                                    bg-white bg-opacity-80 
                                    text-gray-700 text-center
                                    p-2 rounded-b-xl">
                            <p class="text-xs font-light">
                                {formatDate(new Date(image.lastModified!))}
                            </p>
                        </div>
                    </div>
                </div>
            ))}
        </div>

        {initialHasMore && (
            <div class="flex justify-center mt-8">
                <button 
                    id="load-more" 
                    class="px-6 py-2 bg-gray-100 text-gray-800 rounded-full 
                           hover:bg-gray-200 transition-colors 
                           shadow-md hover:shadow-lg"
                >
                    加载更多
                </button>
            </div>
        )}

        <!-- 图片弹窗 -->
        <div 
            id="image-modal" 
            class="fixed inset-0 bg-black bg-opacity-80 z-50 hidden 
                   items-center justify-center p-4"
        >
            <div class="relative max-w-full max-h-full">
                <img 
                    id="modal-image" 
                    src="" 
                    alt="Enlarged image" 
                    class="max-w-full max-h-[90vh] object-contain rounded-xl"
                />
                <button 
                    id="close-modal" 
                    class="absolute top-4 right-4 text-white 
                           bg-gray-700 bg-opacity-50 rounded-full p-2 
                           hover:bg-opacity-70 transition-all"
                >
                    关闭
                </button>
            </div>
        </div>
    </main>

    <script define:vars={{ currentPage }}>
    document.addEventListener('DOMContentLoaded', () => {
        const loadMoreBtn = document.getElementById('load-more');
        const imageGrid = document.getElementById('image-grid');
        
        // 用于存储 ContinuationToken
        let continuationToken = null;

        if (loadMoreBtn) {
            loadMoreBtn.addEventListener('click', async () => {
                try {
                    // 构建 URL，包含 ContinuationToken
                    const url = new URL('/api/album-images', window.location.origin);
                    url.searchParams.set('page', (currentPage + 1).toString());
                    if (continuationToken) {
                        url.searchParams.set('continuationToken', continuationToken);
                    }

                    const response = await fetch(url.toString());
                    const { images, hasMore, continuationToken: nextContinuationToken } = await response.json();

                    // 更新 ContinuationToken
                    continuationToken = nextContinuationToken;

                    images.forEach((image) => {
                        const div = document.createElement('div');
                        div.className = 'masonry-item relative group cursor-pointer';
                        div.dataset.url = image.url;
                        
                        div.innerHTML = `
                            <div class="relative overflow-hidden rounded-xl shadow-lg transition-all 
                                        duration-300 hover:shadow-xl">
                                <img 
                                    src="${image.url}"
                                    alt="Image from ${image.key}"
                                    class="w-full h-auto object-cover rounded-xl 
                                           transform transition-transform duration-300 
                                           group-hover:scale-105"
                                    loading="lazy"
                                />
                                <div class="absolute bottom-0 left-0 right-0 
                                            bg-white bg-opacity-80 
                                            text-gray-700 text-center
                                            p-2 rounded-b-xl">
                                    <p class="text-xs font-light">
                                        ${new Date(image.lastModified).toLocaleString('zh-CN', {
                                            year: 'numeric',
                                            month: '2-digit',
                                            day: '2-digit'
                                        }).replace(/\//g, '.')}
                                    </p>
                                </div>
                            </div>
                        `;
                        
                        if (imageGrid) {
                            imageGrid.appendChild(div);
                        }
                    });

                    // 如果没有更多数据，隐藏加载更多按钮
                    if (!hasMore && loadMoreBtn) {
                        loadMoreBtn.style.display = 'none';
                    }
                } catch (error) {
                    console.error('加载更多图片失败:', error);
                }
            });
        }
    });
    </script>
</Layout>